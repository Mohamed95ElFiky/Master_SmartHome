
MASTER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003e  00800060  000005fa  0000066e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006ac  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000220  00000000  00000000  00000718  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b81  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b70  00000000  00000000  000024b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000f41  00000000  00000000  00003029  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000434  00000000  00000000  00003f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006c4  00000000  00000000  000043a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a48  00000000  00000000  00004a64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b0  00000000  00000000  000054ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ef       	ldi	r30, 0xFA	; 250
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 39       	cpi	r26, 0x9E	; 158
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "../MCAL/SPI.h"

int main(void) 
	
{	//Initializations:
	LED0_Initialization();  //function that initializes led 0 [setting pin direction]
  82:	0e 94 ad 01 	call	0x35a	; 0x35a <LED0_Initialization>
	LED1_Initialization();  //function that initializes led 1 [setting pin direction]
  86:	0e 94 b8 01 	call	0x370	; 0x370 <LED1_Initialization>
	LED2_Initialization();  //function that initializes led 2 [setting pin direction]
  8a:	0e 94 c3 01 	call	0x386	; 0x386 <LED2_Initialization>
	Relay_Initialization(); //function that initializes relay [setting relay pin direction]
  8e:	0e 94 99 00 	call	0x132	; 0x132 <Relay_Initialization>
	Buzzer_Initialization();//function that initializes buzzer [setting buzzer pin direction]
  92:	0e 94 93 00 	call	0x126	; 0x126 <Buzzer_Initialization>
	LCD_Initialization();	//function that initializes LCD [defining pins direction for control pins and data pins, checking mode]
  96:	0e 94 f6 00 	call	0x1ec	; 0x1ec <LCD_Initialization>
	UART_Init();			//setting baud rate, enabling Transmitter and Receiver bits, configuration for UART, baud rate calculation]
  9a:	0e 94 ef 02 	call	0x5de	; 0x5de <UART_Init>
	SPI_Init();				//defining direction pins for [MOSI, MISO, CLK and SS]
  9e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <SPI_Init>
	
	
	LCD_String("Smart Home"); //function that displays the comment "smart home" on LCD at start of system
  a2:	80 e6       	ldi	r24, 0x60	; 96
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_String>
	u8 data_received;         // uninitialized global variable to store data received by UART
	
	
while(1)
{
	data_received = UART_Receive();  //assigning received data from UART to this variable [data coming from smart-phone to UART]
  aa:	0e 94 f7 02 	call	0x5ee	; 0x5ee <UART_Receive>
  ae:	c8 2f       	mov	r28, r24
	SPI_Transmit(data_received);  //function that takes Data received from UART and send it to slave micro-controller through SPI]
  b0:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <SPI_Transmit>
	
	if(data_received == '1')	     //in case data received from smart-phone  is '1'
  b4:	c1 33       	cpi	r28, 0x31	; 49
  b6:	59 f4       	brne	.+22     	; 0xce <main+0x4c>
	{	LCD_Clear();				 //function clears the LCD to display next comment                   
  b8:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_Clear>
		LCD_String("ROOM 1");		 //function to display the comment 'ROOM 1' on LCD   
  bc:	8b e6       	ldi	r24, 0x6B	; 107
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_String>
		LED0_TGL();	                 //function lets LED0 toggle its value [if '1'received from UART then open LED0, if '1' received again then turn off LED0]
  c4:	0e 94 b3 01 	call	0x366	; 0x366 <LED0_TGL>
		buzzer_ring();		        //function that lets buzzer give a short ring with every action for 1 sec. 
  c8:	0e 94 a0 00 	call	0x140	; 0x140 <buzzer_ring>
  cc:	ee cf       	rjmp	.-36     	; 0xaa <main+0x28>
	}
	
	else if(data_received == '2')   //in case data received from smart-phone  is '2'
  ce:	c2 33       	cpi	r28, 0x32	; 50
  d0:	59 f4       	brne	.+22     	; 0xe8 <main+0x66>
	{	
		LCD_Clear();				//function clears the LCD to display next comment
  d2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_Clear>
		LCD_String("ROOM 2");		//function to display the comment 'ROOM 2' on LCD
  d6:	82 e7       	ldi	r24, 0x72	; 114
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_String>
		LED1_TGL();                //function lets LED1 toggle its value [if '2'received from UART then open LED1, if '2' received again then turn off LED1]
  de:	0e 94 be 01 	call	0x37c	; 0x37c <LED1_TGL>
		buzzer_ring();              //function that lets buzzer give a short ring with every action for 1 sec.
  e2:	0e 94 a0 00 	call	0x140	; 0x140 <buzzer_ring>
  e6:	e1 cf       	rjmp	.-62     	; 0xaa <main+0x28>
	}
	else if(data_received == '3')  //in case data received from smart-phone  is '3'
  e8:	c3 33       	cpi	r28, 0x33	; 51
  ea:	59 f4       	brne	.+22     	; 0x102 <main+0x80>
	{	
		LCD_Clear();			  //function clears the LCD to display next comment
  ec:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_Clear>
		LCD_String("ROOM 3");	//function to display the comment 'ROOM 3' on LCD
  f0:	89 e7       	ldi	r24, 0x79	; 121
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_String>
		LED2_TGL();			 //function lets LED2 toggle its value [if '3'received from UART then open LED2, if '3' received again then turn off LED2]
  f8:	0e 94 c9 01 	call	0x392	; 0x392 <LED2_TGL>
		buzzer_ring();		//function that lets buzzer give a short ring with every action for 1 sec.
  fc:	0e 94 a0 00 	call	0x140	; 0x140 <buzzer_ring>
 100:	d4 cf       	rjmp	.-88     	; 0xaa <main+0x28>
	}
	else if(data_received == '4')  //in case data received from smart-phone  is '4'
 102:	c4 33       	cpi	r28, 0x34	; 52
 104:	59 f4       	brne	.+22     	; 0x11c <main+0x9a>
	{
		LCD_Clear();              //function clears the LCD to display next comment
 106:	0e 94 52 01 	call	0x2a4	; 0x2a4 <LCD_Clear>
		LCD_String("OPEN DOOR"); //function to display the comment 'ROOM 4' on LCD
 10a:	80 e8       	ldi	r24, 0x80	; 128
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_String>
		Relay_TGL();           //function lets relay toggle its value [if '4'received from UART then open relay, if '4' received again then turn off relay]
 112:	0e 94 9b 00 	call	0x136	; 0x136 <Relay_TGL>
		buzzer_ring();	       //function that lets buzzer give a short ring with every action for 1 sec.
 116:	0e 94 a0 00 	call	0x140	; 0x140 <buzzer_ring>
 11a:	c7 cf       	rjmp	.-114    	; 0xaa <main+0x28>
	}
	else
	{
		LCD_String("Wrong Data Received");//function to display the comment 'Wrong Data Received' on LCD
 11c:	8a e8       	ldi	r24, 0x8A	; 138
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_String>
 124:	c2 cf       	rjmp	.-124    	; 0xaa <main+0x28>

00000126 <Buzzer_Initialization>:
 126:	d3 9a       	sbi	0x1a, 3	; 26
 128:	08 95       	ret

0000012a <Buzzer_ON>:
 12a:	db 9a       	sbi	0x1b, 3	; 27
 12c:	08 95       	ret

0000012e <Buzzer_OFF>:
 12e:	db 98       	cbi	0x1b, 3	; 27
 130:	08 95       	ret

00000132 <Relay_Initialization>:
 132:	d2 9a       	sbi	0x1a, 2	; 26
 134:	08 95       	ret

00000136 <Relay_TGL>:
 136:	9b b3       	in	r25, 0x1b	; 27
 138:	84 e0       	ldi	r24, 0x04	; 4
 13a:	89 27       	eor	r24, r25
 13c:	8b bb       	out	0x1b, r24	; 27
 13e:	08 95       	ret

00000140 <buzzer_ring>:
 140:	0e 94 95 00 	call	0x12a	; 0x12a <Buzzer_ON>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 144:	2f ef       	ldi	r18, 0xFF	; 255
 146:	89 e6       	ldi	r24, 0x69	; 105
 148:	98 e1       	ldi	r25, 0x18	; 24
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	90 40       	sbci	r25, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <buzzer_ring+0xa>
 152:	00 c0       	rjmp	.+0      	; 0x154 <buzzer_ring+0x14>
 154:	00 00       	nop
 156:	0e 94 97 00 	call	0x12e	; 0x12e <Buzzer_OFF>
 15a:	08 95       	ret

0000015c <LCD_Command>:
 15c:	cf 93       	push	r28
 15e:	c8 2f       	mov	r28, r24
 160:	40 e0       	ldi	r20, 0x00	; 0
 162:	61 e0       	ldi	r22, 0x01	; 1
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 16a:	40 e0       	ldi	r20, 0x00	; 0
 16c:	62 e0       	ldi	r22, 0x02	; 2
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 174:	40 e0       	ldi	r20, 0x00	; 0
 176:	63 e0       	ldi	r22, 0x03	; 3
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 17e:	8b b3       	in	r24, 0x1b	; 27
 180:	9c 2f       	mov	r25, r28
 182:	90 7f       	andi	r25, 0xF0	; 240
 184:	8f 70       	andi	r24, 0x0F	; 15
 186:	89 2b       	or	r24, r25
 188:	8b bb       	out	0x1b, r24	; 27
 18a:	41 e0       	ldi	r20, 0x01	; 1
 18c:	63 e0       	ldi	r22, 0x03	; 3
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 194:	8f e9       	ldi	r24, 0x9F	; 159
 196:	9f e0       	ldi	r25, 0x0F	; 15
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_Command+0x3c>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <LCD_Command+0x42>
 19e:	00 00       	nop
 1a0:	40 e0       	ldi	r20, 0x00	; 0
 1a2:	63 e0       	ldi	r22, 0x03	; 3
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 1aa:	2b b3       	in	r18, 0x1b	; 27
 1ac:	30 e1       	ldi	r19, 0x10	; 16
 1ae:	c3 9f       	mul	r28, r19
 1b0:	c0 01       	movw	r24, r0
 1b2:	11 24       	eor	r1, r1
 1b4:	92 2f       	mov	r25, r18
 1b6:	9f 70       	andi	r25, 0x0F	; 15
 1b8:	89 2b       	or	r24, r25
 1ba:	8b bb       	out	0x1b, r24	; 27
 1bc:	41 e0       	ldi	r20, 0x01	; 1
 1be:	63 e0       	ldi	r22, 0x03	; 3
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 1c6:	8f e9       	ldi	r24, 0x9F	; 159
 1c8:	9f e0       	ldi	r25, 0x0F	; 15
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <LCD_Command+0x6e>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <LCD_Command+0x74>
 1d0:	00 00       	nop
 1d2:	40 e0       	ldi	r20, 0x00	; 0
 1d4:	63 e0       	ldi	r22, 0x03	; 3
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 1dc:	8f e1       	ldi	r24, 0x1F	; 31
 1de:	9e e4       	ldi	r25, 0x4E	; 78
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <LCD_Command+0x84>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <LCD_Command+0x8a>
 1e6:	00 00       	nop
 1e8:	cf 91       	pop	r28
 1ea:	08 95       	ret

000001ec <LCD_Initialization>:
 1ec:	41 e0       	ldi	r20, 0x01	; 1
 1ee:	61 e0       	ldi	r22, 0x01	; 1
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 1f6:	41 e0       	ldi	r20, 0x01	; 1
 1f8:	62 e0       	ldi	r22, 0x02	; 2
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 200:	41 e0       	ldi	r20, 0x01	; 1
 202:	63 e0       	ldi	r22, 0x03	; 3
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 20a:	41 e0       	ldi	r20, 0x01	; 1
 20c:	64 e0       	ldi	r22, 0x04	; 4
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 214:	41 e0       	ldi	r20, 0x01	; 1
 216:	65 e0       	ldi	r22, 0x05	; 5
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 21e:	41 e0       	ldi	r20, 0x01	; 1
 220:	66 e0       	ldi	r22, 0x06	; 6
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 228:	41 e0       	ldi	r20, 0x01	; 1
 22a:	67 e0       	ldi	r22, 0x07	; 7
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 232:	83 e3       	ldi	r24, 0x33	; 51
 234:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 238:	82 e3       	ldi	r24, 0x32	; 50
 23a:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 23e:	88 e2       	ldi	r24, 0x28	; 40
 240:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 24a:	8c e0       	ldi	r24, 0x0C	; 12
 24c:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 256:	86 e0       	ldi	r24, 0x06	; 6
 258:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 25c:	40 e0       	ldi	r20, 0x00	; 0
 25e:	61 e0       	ldi	r22, 0x01	; 1
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 266:	40 e0       	ldi	r20, 0x00	; 0
 268:	62 e0       	ldi	r22, 0x02	; 2
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 270:	40 e0       	ldi	r20, 0x00	; 0
 272:	63 e0       	ldi	r22, 0x03	; 3
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 27a:	40 e0       	ldi	r20, 0x00	; 0
 27c:	64 e0       	ldi	r22, 0x04	; 4
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	65 e0       	ldi	r22, 0x05	; 5
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 28e:	40 e0       	ldi	r20, 0x00	; 0
 290:	66 e0       	ldi	r22, 0x06	; 6
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	67 e0       	ldi	r22, 0x07	; 7
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 2a2:	08 95       	ret

000002a4 <LCD_Clear>:
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_Command>
 2aa:	08 95       	ret

000002ac <LCD_Character>:
 2ac:	cf 93       	push	r28
 2ae:	c8 2f       	mov	r28, r24
 2b0:	41 e0       	ldi	r20, 0x01	; 1
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	62 e0       	ldi	r22, 0x02	; 2
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 2c4:	40 e0       	ldi	r20, 0x00	; 0
 2c6:	63 e0       	ldi	r22, 0x03	; 3
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 2ce:	8b b3       	in	r24, 0x1b	; 27
 2d0:	9c 2f       	mov	r25, r28
 2d2:	90 7f       	andi	r25, 0xF0	; 240
 2d4:	8f 70       	andi	r24, 0x0F	; 15
 2d6:	89 2b       	or	r24, r25
 2d8:	8b bb       	out	0x1b, r24	; 27
 2da:	41 e0       	ldi	r20, 0x01	; 1
 2dc:	63 e0       	ldi	r22, 0x03	; 3
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 2e4:	8f e9       	ldi	r24, 0x9F	; 159
 2e6:	9f e0       	ldi	r25, 0x0F	; 15
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <LCD_Character+0x3c>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <LCD_Character+0x42>
 2ee:	00 00       	nop
 2f0:	40 e0       	ldi	r20, 0x00	; 0
 2f2:	63 e0       	ldi	r22, 0x03	; 3
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 2fa:	2b b3       	in	r18, 0x1b	; 27
 2fc:	30 e1       	ldi	r19, 0x10	; 16
 2fe:	c3 9f       	mul	r28, r19
 300:	c0 01       	movw	r24, r0
 302:	11 24       	eor	r1, r1
 304:	92 2f       	mov	r25, r18
 306:	9f 70       	andi	r25, 0x0F	; 15
 308:	89 2b       	or	r24, r25
 30a:	8b bb       	out	0x1b, r24	; 27
 30c:	41 e0       	ldi	r20, 0x01	; 1
 30e:	63 e0       	ldi	r22, 0x03	; 3
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 316:	8f e9       	ldi	r24, 0x9F	; 159
 318:	9f e0       	ldi	r25, 0x0F	; 15
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_Character+0x6e>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_Character+0x74>
 320:	00 00       	nop
 322:	40 e0       	ldi	r20, 0x00	; 0
 324:	63 e0       	ldi	r22, 0x03	; 3
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	0e 94 3f 02 	call	0x47e	; 0x47e <DIO_SetPin_Value>
 32c:	8f e1       	ldi	r24, 0x1F	; 31
 32e:	9e e4       	ldi	r25, 0x4E	; 78
 330:	01 97       	sbiw	r24, 0x01	; 1
 332:	f1 f7       	brne	.-4      	; 0x330 <LCD_Character+0x84>
 334:	00 c0       	rjmp	.+0      	; 0x336 <LCD_Character+0x8a>
 336:	00 00       	nop
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <LCD_String>:
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
 340:	ec 01       	movw	r28, r24
 342:	88 81       	ld	r24, Y
 344:	88 23       	and	r24, r24
 346:	31 f0       	breq	.+12     	; 0x354 <LCD_String+0x18>
 348:	21 96       	adiw	r28, 0x01	; 1
 34a:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Character>
 34e:	89 91       	ld	r24, Y+
 350:	81 11       	cpse	r24, r1
 352:	fb cf       	rjmp	.-10     	; 0x34a <LCD_String+0xe>
 354:	df 91       	pop	r29
 356:	cf 91       	pop	r28
 358:	08 95       	ret

0000035a <LED0_Initialization>:
 35a:	41 e0       	ldi	r20, 0x01	; 1
 35c:	62 e0       	ldi	r22, 0x02	; 2
 35e:	82 e0       	ldi	r24, 0x02	; 2
 360:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 364:	08 95       	ret

00000366 <LED0_TGL>:
 366:	62 e0       	ldi	r22, 0x02	; 2
 368:	82 e0       	ldi	r24, 0x02	; 2
 36a:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_TogglePin_Value>
 36e:	08 95       	ret

00000370 <LED1_Initialization>:
 370:	41 e0       	ldi	r20, 0x01	; 1
 372:	67 e0       	ldi	r22, 0x07	; 7
 374:	82 e0       	ldi	r24, 0x02	; 2
 376:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 37a:	08 95       	ret

0000037c <LED1_TGL>:
 37c:	67 e0       	ldi	r22, 0x07	; 7
 37e:	82 e0       	ldi	r24, 0x02	; 2
 380:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_TogglePin_Value>
 384:	08 95       	ret

00000386 <LED2_Initialization>:
 386:	41 e0       	ldi	r20, 0x01	; 1
 388:	63 e0       	ldi	r22, 0x03	; 3
 38a:	83 e0       	ldi	r24, 0x03	; 3
 38c:	0e 94 ce 01 	call	0x39c	; 0x39c <DIO_SetPin_Direction>
 390:	08 95       	ret

00000392 <LED2_TGL>:
 392:	63 e0       	ldi	r22, 0x03	; 3
 394:	83 e0       	ldi	r24, 0x03	; 3
 396:	0e 94 b0 02 	call	0x560	; 0x560 <DIO_TogglePin_Value>
 39a:	08 95       	ret

0000039c <DIO_SetPin_Direction>:
 39c:	44 23       	and	r20, r20
 39e:	19 f0       	breq	.+6      	; 0x3a6 <DIO_SetPin_Direction+0xa>
 3a0:	41 30       	cpi	r20, 0x01	; 1
 3a2:	c9 f1       	breq	.+114    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3a4:	08 95       	ret
 3a6:	81 30       	cpi	r24, 0x01	; 1
 3a8:	91 f0       	breq	.+36     	; 0x3ce <DIO_SetPin_Direction+0x32>
 3aa:	28 f0       	brcs	.+10     	; 0x3b6 <DIO_SetPin_Direction+0x1a>
 3ac:	82 30       	cpi	r24, 0x02	; 2
 3ae:	d9 f0       	breq	.+54     	; 0x3e6 <DIO_SetPin_Direction+0x4a>
 3b0:	83 30       	cpi	r24, 0x03	; 3
 3b2:	29 f1       	breq	.+74     	; 0x3fe <DIO_SetPin_Direction+0x62>
 3b4:	08 95       	ret
 3b6:	2a b3       	in	r18, 0x1a	; 26
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_SetPin_Direction+0x26>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_SetPin_Direction+0x22>
 3c6:	80 95       	com	r24
 3c8:	82 23       	and	r24, r18
 3ca:	8a bb       	out	0x1a, r24	; 26
 3cc:	08 95       	ret
 3ce:	27 b3       	in	r18, 0x17	; 23
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <DIO_SetPin_Direction+0x3e>
 3d6:	88 0f       	add	r24, r24
 3d8:	99 1f       	adc	r25, r25
 3da:	6a 95       	dec	r22
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <DIO_SetPin_Direction+0x3a>
 3de:	80 95       	com	r24
 3e0:	82 23       	and	r24, r18
 3e2:	87 bb       	out	0x17, r24	; 23
 3e4:	08 95       	ret
 3e6:	24 b3       	in	r18, 0x14	; 20
 3e8:	81 e0       	ldi	r24, 0x01	; 1
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_SetPin_Direction+0x56>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	6a 95       	dec	r22
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_SetPin_Direction+0x52>
 3f6:	80 95       	com	r24
 3f8:	82 23       	and	r24, r18
 3fa:	84 bb       	out	0x14, r24	; 20
 3fc:	08 95       	ret
 3fe:	21 b3       	in	r18, 0x11	; 17
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 c0       	rjmp	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 406:	88 0f       	add	r24, r24
 408:	99 1f       	adc	r25, r25
 40a:	6a 95       	dec	r22
 40c:	e2 f7       	brpl	.-8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 40e:	80 95       	com	r24
 410:	82 23       	and	r24, r18
 412:	81 bb       	out	0x11, r24	; 17
 414:	08 95       	ret
 416:	81 30       	cpi	r24, 0x01	; 1
 418:	89 f0       	breq	.+34     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 41a:	28 f0       	brcs	.+10     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41c:	82 30       	cpi	r24, 0x02	; 2
 41e:	c9 f0       	breq	.+50     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 420:	83 30       	cpi	r24, 0x03	; 3
 422:	11 f1       	breq	.+68     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 424:	08 95       	ret
 426:	2a b3       	in	r18, 0x1a	; 26
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	6a 95       	dec	r22
 434:	e2 f7       	brpl	.-8      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 436:	82 2b       	or	r24, r18
 438:	8a bb       	out	0x1a, r24	; 26
 43a:	08 95       	ret
 43c:	27 b3       	in	r18, 0x17	; 23
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	02 c0       	rjmp	.+4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 444:	88 0f       	add	r24, r24
 446:	99 1f       	adc	r25, r25
 448:	6a 95       	dec	r22
 44a:	e2 f7       	brpl	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44c:	82 2b       	or	r24, r18
 44e:	87 bb       	out	0x17, r24	; 23
 450:	08 95       	ret
 452:	24 b3       	in	r18, 0x14	; 20
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	02 c0       	rjmp	.+4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	6a 95       	dec	r22
 460:	e2 f7       	brpl	.-8      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 462:	82 2b       	or	r24, r18
 464:	84 bb       	out	0x14, r24	; 20
 466:	08 95       	ret
 468:	21 b3       	in	r18, 0x11	; 17
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 470:	88 0f       	add	r24, r24
 472:	99 1f       	adc	r25, r25
 474:	6a 95       	dec	r22
 476:	e2 f7       	brpl	.-8      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 478:	82 2b       	or	r24, r18
 47a:	81 bb       	out	0x11, r24	; 17
 47c:	08 95       	ret

0000047e <DIO_SetPin_Value>:
 47e:	44 23       	and	r20, r20
 480:	19 f0       	breq	.+6      	; 0x488 <DIO_SetPin_Value+0xa>
 482:	41 30       	cpi	r20, 0x01	; 1
 484:	c9 f1       	breq	.+114    	; 0x4f8 <DIO_SetPin_Value+0x7a>
 486:	08 95       	ret
 488:	81 30       	cpi	r24, 0x01	; 1
 48a:	91 f0       	breq	.+36     	; 0x4b0 <DIO_SetPin_Value+0x32>
 48c:	28 f0       	brcs	.+10     	; 0x498 <DIO_SetPin_Value+0x1a>
 48e:	82 30       	cpi	r24, 0x02	; 2
 490:	d9 f0       	breq	.+54     	; 0x4c8 <DIO_SetPin_Value+0x4a>
 492:	83 30       	cpi	r24, 0x03	; 3
 494:	29 f1       	breq	.+74     	; 0x4e0 <DIO_SetPin_Value+0x62>
 496:	08 95       	ret
 498:	2b b3       	in	r18, 0x1b	; 27
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <DIO_SetPin_Value+0x26>
 4a0:	88 0f       	add	r24, r24
 4a2:	99 1f       	adc	r25, r25
 4a4:	6a 95       	dec	r22
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <DIO_SetPin_Value+0x22>
 4a8:	80 95       	com	r24
 4aa:	82 23       	and	r24, r18
 4ac:	8b bb       	out	0x1b, r24	; 27
 4ae:	08 95       	ret
 4b0:	28 b3       	in	r18, 0x18	; 24
 4b2:	81 e0       	ldi	r24, 0x01	; 1
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <DIO_SetPin_Value+0x3e>
 4b8:	88 0f       	add	r24, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	6a 95       	dec	r22
 4be:	e2 f7       	brpl	.-8      	; 0x4b8 <DIO_SetPin_Value+0x3a>
 4c0:	80 95       	com	r24
 4c2:	82 23       	and	r24, r18
 4c4:	88 bb       	out	0x18, r24	; 24
 4c6:	08 95       	ret
 4c8:	25 b3       	in	r18, 0x15	; 21
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <DIO_SetPin_Value+0x56>
 4d0:	88 0f       	add	r24, r24
 4d2:	99 1f       	adc	r25, r25
 4d4:	6a 95       	dec	r22
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <DIO_SetPin_Value+0x52>
 4d8:	80 95       	com	r24
 4da:	82 23       	and	r24, r18
 4dc:	85 bb       	out	0x15, r24	; 21
 4de:	08 95       	ret
 4e0:	22 b3       	in	r18, 0x12	; 18
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <DIO_SetPin_Value+0x6e>
 4e8:	88 0f       	add	r24, r24
 4ea:	99 1f       	adc	r25, r25
 4ec:	6a 95       	dec	r22
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <DIO_SetPin_Value+0x6a>
 4f0:	80 95       	com	r24
 4f2:	82 23       	and	r24, r18
 4f4:	82 bb       	out	0x12, r24	; 18
 4f6:	08 95       	ret
 4f8:	81 30       	cpi	r24, 0x01	; 1
 4fa:	89 f0       	breq	.+34     	; 0x51e <DIO_SetPin_Value+0xa0>
 4fc:	28 f0       	brcs	.+10     	; 0x508 <DIO_SetPin_Value+0x8a>
 4fe:	82 30       	cpi	r24, 0x02	; 2
 500:	c9 f0       	breq	.+50     	; 0x534 <DIO_SetPin_Value+0xb6>
 502:	83 30       	cpi	r24, 0x03	; 3
 504:	11 f1       	breq	.+68     	; 0x54a <DIO_SetPin_Value+0xcc>
 506:	08 95       	ret
 508:	2b b3       	in	r18, 0x1b	; 27
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	02 c0       	rjmp	.+4      	; 0x514 <DIO_SetPin_Value+0x96>
 510:	88 0f       	add	r24, r24
 512:	99 1f       	adc	r25, r25
 514:	6a 95       	dec	r22
 516:	e2 f7       	brpl	.-8      	; 0x510 <DIO_SetPin_Value+0x92>
 518:	82 2b       	or	r24, r18
 51a:	8b bb       	out	0x1b, r24	; 27
 51c:	08 95       	ret
 51e:	28 b3       	in	r18, 0x18	; 24
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	02 c0       	rjmp	.+4      	; 0x52a <DIO_SetPin_Value+0xac>
 526:	88 0f       	add	r24, r24
 528:	99 1f       	adc	r25, r25
 52a:	6a 95       	dec	r22
 52c:	e2 f7       	brpl	.-8      	; 0x526 <DIO_SetPin_Value+0xa8>
 52e:	82 2b       	or	r24, r18
 530:	88 bb       	out	0x18, r24	; 24
 532:	08 95       	ret
 534:	25 b3       	in	r18, 0x15	; 21
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <DIO_SetPin_Value+0xc2>
 53c:	88 0f       	add	r24, r24
 53e:	99 1f       	adc	r25, r25
 540:	6a 95       	dec	r22
 542:	e2 f7       	brpl	.-8      	; 0x53c <DIO_SetPin_Value+0xbe>
 544:	82 2b       	or	r24, r18
 546:	85 bb       	out	0x15, r24	; 21
 548:	08 95       	ret
 54a:	22 b3       	in	r18, 0x12	; 18
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	02 c0       	rjmp	.+4      	; 0x556 <DIO_SetPin_Value+0xd8>
 552:	88 0f       	add	r24, r24
 554:	99 1f       	adc	r25, r25
 556:	6a 95       	dec	r22
 558:	e2 f7       	brpl	.-8      	; 0x552 <DIO_SetPin_Value+0xd4>
 55a:	82 2b       	or	r24, r18
 55c:	82 bb       	out	0x12, r24	; 18
 55e:	08 95       	ret

00000560 <DIO_TogglePin_Value>:
 560:	81 30       	cpi	r24, 0x01	; 1
 562:	89 f0       	breq	.+34     	; 0x586 <DIO_TogglePin_Value+0x26>
 564:	28 f0       	brcs	.+10     	; 0x570 <DIO_TogglePin_Value+0x10>
 566:	82 30       	cpi	r24, 0x02	; 2
 568:	c9 f0       	breq	.+50     	; 0x59c <DIO_TogglePin_Value+0x3c>
 56a:	83 30       	cpi	r24, 0x03	; 3
 56c:	11 f1       	breq	.+68     	; 0x5b2 <DIO_TogglePin_Value+0x52>
 56e:	08 95       	ret
 570:	2b b3       	in	r18, 0x1b	; 27
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	02 c0       	rjmp	.+4      	; 0x57c <DIO_TogglePin_Value+0x1c>
 578:	88 0f       	add	r24, r24
 57a:	99 1f       	adc	r25, r25
 57c:	6a 95       	dec	r22
 57e:	e2 f7       	brpl	.-8      	; 0x578 <DIO_TogglePin_Value+0x18>
 580:	82 27       	eor	r24, r18
 582:	8b bb       	out	0x1b, r24	; 27
 584:	08 95       	ret
 586:	28 b3       	in	r18, 0x18	; 24
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	02 c0       	rjmp	.+4      	; 0x592 <DIO_TogglePin_Value+0x32>
 58e:	88 0f       	add	r24, r24
 590:	99 1f       	adc	r25, r25
 592:	6a 95       	dec	r22
 594:	e2 f7       	brpl	.-8      	; 0x58e <DIO_TogglePin_Value+0x2e>
 596:	82 27       	eor	r24, r18
 598:	88 bb       	out	0x18, r24	; 24
 59a:	08 95       	ret
 59c:	25 b3       	in	r18, 0x15	; 21
 59e:	81 e0       	ldi	r24, 0x01	; 1
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <DIO_TogglePin_Value+0x48>
 5a4:	88 0f       	add	r24, r24
 5a6:	99 1f       	adc	r25, r25
 5a8:	6a 95       	dec	r22
 5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <DIO_TogglePin_Value+0x44>
 5ac:	82 27       	eor	r24, r18
 5ae:	85 bb       	out	0x15, r24	; 21
 5b0:	08 95       	ret
 5b2:	22 b3       	in	r18, 0x12	; 18
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <DIO_TogglePin_Value+0x5e>
 5ba:	88 0f       	add	r24, r24
 5bc:	99 1f       	adc	r25, r25
 5be:	6a 95       	dec	r22
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <DIO_TogglePin_Value+0x5a>
 5c2:	82 27       	eor	r24, r18
 5c4:	82 bb       	out	0x12, r24	; 18
 5c6:	08 95       	ret

000005c8 <SPI_Init>:
 5c8:	bd 9a       	sbi	0x17, 5	; 23
 5ca:	be 98       	cbi	0x17, 6	; 23
 5cc:	bf 9a       	sbi	0x17, 7	; 23
 5ce:	bc 9a       	sbi	0x17, 4	; 23
 5d0:	83 e5       	ldi	r24, 0x53	; 83
 5d2:	8d b9       	out	0x0d, r24	; 13
 5d4:	08 95       	ret

000005d6 <SPI_Transmit>:
 5d6:	8f b9       	out	0x0f, r24	; 15
 5d8:	77 9b       	sbis	0x0e, 7	; 14
 5da:	fe cf       	rjmp	.-4      	; 0x5d8 <SPI_Transmit+0x2>
 5dc:	08 95       	ret

000005de <UART_Init>:
 5de:	88 e1       	ldi	r24, 0x18	; 24
 5e0:	8a b9       	out	0x0a, r24	; 10
 5e2:	86 e8       	ldi	r24, 0x86	; 134
 5e4:	80 bd       	out	0x20, r24	; 32
 5e6:	87 e6       	ldi	r24, 0x67	; 103
 5e8:	89 b9       	out	0x09, r24	; 9
 5ea:	10 bc       	out	0x20, r1	; 32
 5ec:	08 95       	ret

000005ee <UART_Receive>:
 5ee:	5f 9b       	sbis	0x0b, 7	; 11
 5f0:	fe cf       	rjmp	.-4      	; 0x5ee <UART_Receive>
 5f2:	8c b1       	in	r24, 0x0c	; 12
 5f4:	08 95       	ret

000005f6 <_exit>:
 5f6:	f8 94       	cli

000005f8 <__stop_program>:
 5f8:	ff cf       	rjmp	.-2      	; 0x5f8 <__stop_program>
